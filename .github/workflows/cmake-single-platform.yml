# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "Milan1" ]
  pull_request:
    branches: [ "Milan1" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Create Build repository
      run: mkdir ${{github.workspace}}/cpp/Build

    - name: CMake
      run: cmake ${{github.workspace}}/cpp

    # - name: Build
    #   # Build your program with the given configuration
    #   run: cmake --build ${{github.workspace}}/cpp/Build
      
    - name: Make
      # Build your program with the given configuration
      run: make ${{github.workspace}}/cpp/Build -j19
      

    - name: Test
      working-directory: ${{github.workspace}}/cpp/Build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}} -V

